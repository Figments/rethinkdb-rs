mod args ; # [ cfg ( feature = "with_io" ) ] mod io ; # [ cfg ( feature = "with_io" ) ] pub use self :: io :: * ; use Client ; use ql2 :: proto :: Term ; use protobuf :: repeated :: RepeatedField ; use ql2 :: proto :: Term_TermType ; impl Client { pub fn connect ( & self ) -> Client { unimplemented ! ( ) ; } pub fn close ( & self ) -> Client { unimplemented ! ( ) ; } pub fn reconnect ( & self ) -> Client { unimplemented ! ( ) ; } pub fn run ( & self ) -> Client { unimplemented ! ( ) ; } pub fn run_noreply ( & self ) -> Client { unimplemented ! ( ) ; } pub fn changes ( & self ) -> Client { unimplemented ! ( ) ; } pub fn noreply_wait ( & self ) -> Client { unimplemented ! ( ) ; } pub fn server ( & self ) -> Client { unimplemented ! ( ) ; } pub fn optarg ( & self ) -> Client { unimplemented ! ( ) ; } pub fn db_create ( & self ) -> Client { unimplemented ! ( ) ; } pub fn db_drop ( & self ) -> Client { unimplemented ! ( ) ; } pub fn db_list ( & self ) -> Client { unimplemented ! ( ) ; } pub fn table_create ( & self ) -> Client { unimplemented ! ( ) ; } pub fn table_drop ( & self ) -> Client { unimplemented ! ( ) ; } pub fn table_list ( & self ) -> Client { unimplemented ! ( ) ; } pub fn index_create ( & self ) -> Client { unimplemented ! ( ) ; } pub fn index_drop ( & self ) -> Client { unimplemented ! ( ) ; } pub fn index_list ( & self ) -> Client { unimplemented ! ( ) ; } pub fn index_rename ( & self ) -> Client { unimplemented ! ( ) ; } pub fn index_status ( & self ) -> Client { unimplemented ! ( ) ; } pub fn index_wait ( & self ) -> Client { unimplemented ! ( ) ; } pub fn insert ( & self ) -> Client { unimplemented ! ( ) ; } pub fn update ( & self ) -> Client { unimplemented ! ( ) ; } pub fn replace ( & self ) -> Client { unimplemented ! ( ) ; } pub fn delete ( & self ) -> Client { unimplemented ! ( ) ; } pub fn sync ( & self ) -> Client { unimplemented ! ( ) ; } pub fn db ( & self ) -> Client { unimplemented ! ( ) ; } pub fn table ( & self ) -> Client { unimplemented ! ( ) ; } pub fn get ( & self ) -> Client { unimplemented ! ( ) ; } pub fn get_all ( & self ) -> Client { unimplemented ! ( ) ; } pub fn between ( & self ) -> Client { unimplemented ! ( ) ; } pub fn filter ( & self ) -> Client { unimplemented ! ( ) ; } pub fn inner_join ( & self ) -> Client { unimplemented ! ( ) ; } pub fn outer_join ( & self ) -> Client { unimplemented ! ( ) ; } pub fn eq_join ( & self ) -> Client { unimplemented ! ( ) ; } pub fn zip ( & self ) -> Client { unimplemented ! ( ) ; } pub fn map ( & self ) -> Client { unimplemented ! ( ) ; } pub fn with_fields ( & self ) -> Client { unimplemented ! ( ) ; } pub fn concat_map ( & self ) -> Client { unimplemented ! ( ) ; } pub fn order_by ( & self ) -> Client { unimplemented ! ( ) ; } pub fn skip ( & self ) -> Client { unimplemented ! ( ) ; } pub fn limit ( & self ) -> Client { unimplemented ! ( ) ; } pub fn slice ( & self ) -> Client { unimplemented ! ( ) ; } pub fn nth ( & self ) -> Client { unimplemented ! ( ) ; } pub fn offsets_of ( & self ) -> Client { unimplemented ! ( ) ; } pub fn is_empty ( & self ) -> Client { unimplemented ! ( ) ; } pub fn union ( & self ) -> Client { unimplemented ! ( ) ; } pub fn sample ( & self ) -> Client { unimplemented ! ( ) ; } pub fn group ( & self ) -> Client { unimplemented ! ( ) ; } pub fn ungroup ( & self ) -> Client { unimplemented ! ( ) ; } pub fn reduce ( & self ) -> Client { unimplemented ! ( ) ; } pub fn fold ( & self ) -> Client { unimplemented ! ( ) ; } pub fn count ( & self ) -> Client { unimplemented ! ( ) ; } pub fn sum ( & self ) -> Client { unimplemented ! ( ) ; } pub fn avg ( & self ) -> Client { unimplemented ! ( ) ; } pub fn min ( & self ) -> Client { unimplemented ! ( ) ; } pub fn max ( & self ) -> Client { unimplemented ! ( ) ; } pub fn distinct ( & self ) -> Client { unimplemented ! ( ) ; } pub fn contains ( & self ) -> Client { unimplemented ! ( ) ; } pub fn row ( & self ) -> Client { unimplemented ! ( ) ; } pub fn pluck ( & self ) -> Client { unimplemented ! ( ) ; } pub fn without ( & self ) -> Client { unimplemented ! ( ) ; } pub fn merge ( & self ) -> Client { unimplemented ! ( ) ; } pub fn append ( & self ) -> Client { unimplemented ! ( ) ; } pub fn prepend ( & self ) -> Client { unimplemented ! ( ) ; } pub fn difference ( & self ) -> Client { unimplemented ! ( ) ; } pub fn set_insert ( & self ) -> Client { unimplemented ! ( ) ; } pub fn set_union ( & self ) -> Client { unimplemented ! ( ) ; } pub fn set_intersection ( & self ) -> Client { unimplemented ! ( ) ; } pub fn set_difference ( & self ) -> Client { unimplemented ! ( ) ; } pub fn bracket ( & self ) -> Client { unimplemented ! ( ) ; } pub fn get_field ( & self ) -> Client { unimplemented ! ( ) ; } pub fn has_fields ( & self ) -> Client { unimplemented ! ( ) ; } pub fn insert_at ( & self ) -> Client { unimplemented ! ( ) ; } pub fn splice_at ( & self ) -> Client { unimplemented ! ( ) ; } pub fn delete_at ( & self ) -> Client { unimplemented ! ( ) ; } pub fn change_at ( & self ) -> Client { unimplemented ! ( ) ; } pub fn keys ( & self ) -> Client { unimplemented ! ( ) ; } pub fn values ( & self ) -> Client { unimplemented ! ( ) ; } pub fn literal ( & self ) -> Client { unimplemented ! ( ) ; } pub fn object ( & self ) -> Client { unimplemented ! ( ) ; } pub fn match_ ( & self ) -> Client { unimplemented ! ( ) ; } pub fn split ( & self ) -> Client { unimplemented ! ( ) ; } pub fn upcase ( & self ) -> Client { unimplemented ! ( ) ; } pub fn downcase ( & self ) -> Client { unimplemented ! ( ) ; } pub fn add ( & self ) -> Client { unimplemented ! ( ) ; } pub fn sub ( & self ) -> Client { unimplemented ! ( ) ; } pub fn mul ( & self ) -> Client { unimplemented ! ( ) ; } pub fn div ( & self ) -> Client { unimplemented ! ( ) ; } pub fn mod_ ( & self ) -> Client { unimplemented ! ( ) ; } pub fn and ( & self ) -> Client { unimplemented ! ( ) ; } pub fn or ( & self ) -> Client { unimplemented ! ( ) ; } pub fn eq ( & self ) -> Client { unimplemented ! ( ) ; } pub fn ne ( & self ) -> Client { unimplemented ! ( ) ; } pub fn gt ( & self ) -> Client { unimplemented ! ( ) ; } pub fn ge ( & self ) -> Client { unimplemented ! ( ) ; } pub fn lt ( & self ) -> Client { unimplemented ! ( ) ; } pub fn le ( & self ) -> Client { unimplemented ! ( ) ; } pub fn not ( & self ) -> Client { unimplemented ! ( ) ; } pub fn random ( & self ) -> Client { unimplemented ! ( ) ; } pub fn round ( & self ) -> Client { unimplemented ! ( ) ; } pub fn ceil ( & self ) -> Client { unimplemented ! ( ) ; } pub fn floor ( & self ) -> Client { unimplemented ! ( ) ; } pub fn now ( & self ) -> Client { unimplemented ! ( ) ; } pub fn time ( & self ) -> Client { unimplemented ! ( ) ; } pub fn epoch_time ( & self ) -> Client { unimplemented ! ( ) ; } pub fn iso8601 ( & self ) -> Client { unimplemented ! ( ) ; } pub fn in_timezone ( & self ) -> Client { unimplemented ! ( ) ; } pub fn timezone ( & self ) -> Client { unimplemented ! ( ) ; } pub fn during ( & self ) -> Client { unimplemented ! ( ) ; } pub fn date ( & self ) -> Client { unimplemented ! ( ) ; } pub fn time_of_day ( & self ) -> Client { unimplemented ! ( ) ; } pub fn year ( & self ) -> Client { unimplemented ! ( ) ; } pub fn month ( & self ) -> Client { unimplemented ! ( ) ; } pub fn day ( & self ) -> Client { unimplemented ! ( ) ; } pub fn day_of_week ( & self ) -> Client { unimplemented ! ( ) ; } pub fn day_of_year ( & self ) -> Client { unimplemented ! ( ) ; } pub fn hours ( & self ) -> Client { unimplemented ! ( ) ; } pub fn minutes ( & self ) -> Client { unimplemented ! ( ) ; } pub fn seconds ( & self ) -> Client { unimplemented ! ( ) ; } pub fn to_iso8601 ( & self ) -> Client { unimplemented ! ( ) ; } pub fn to_epoch_time ( & self ) -> Client { unimplemented ! ( ) ; } pub fn array ( & self ) -> Client { unimplemented ! ( ) ; } pub fn hashmap ( & self ) -> Client { unimplemented ! ( ) ; } pub fn args ( & self ) -> Client { unimplemented ! ( ) ; } pub fn binary ( & self ) -> Client { unimplemented ! ( ) ; } pub fn do_ ( & self ) -> Client { unimplemented ! ( ) ; } pub fn branch ( & self ) -> Client { unimplemented ! ( ) ; } pub fn for_each ( & self ) -> Client { unimplemented ! ( ) ; } pub fn range ( & self ) -> Client { unimplemented ! ( ) ; } pub fn error ( & self ) -> Client { unimplemented ! ( ) ; } pub fn default ( & self ) -> Client { unimplemented ! ( ) ; } pub fn expr ( & self ) -> Client { unimplemented ! ( ) ; } pub fn js ( & self ) -> Client { unimplemented ! ( ) ; } pub fn coerce_to ( & self ) -> Client { unimplemented ! ( ) ; } pub fn type_of ( & self ) -> Client { unimplemented ! ( ) ; } pub fn info ( & self ) -> Client { unimplemented ! ( ) ; } pub fn json ( & self ) -> Client { unimplemented ! ( ) ; } pub fn to_json ( & self ) -> Client { unimplemented ! ( ) ; } pub fn http ( & self ) -> Client { unimplemented ! ( ) ; } pub fn uuid ( & self ) -> Client { unimplemented ! ( ) ; } pub fn circle ( & self ) -> Client { unimplemented ! ( ) ; } pub fn distance ( & self ) -> Client { unimplemented ! ( ) ; } pub fn fill ( & self ) -> Client { unimplemented ! ( ) ; } pub fn geojson ( & self ) -> Client { unimplemented ! ( ) ; } pub fn to_geojson ( & self ) -> Client { unimplemented ! ( ) ; } pub fn get_intersecting ( & self ) -> Client { unimplemented ! ( ) ; } pub fn get_nearest ( & self ) -> Client { unimplemented ! ( ) ; } pub fn includes ( & self ) -> Client { unimplemented ! ( ) ; } pub fn intersects ( & self ) -> Client { unimplemented ! ( ) ; } pub fn line ( & self ) -> Client { unimplemented ! ( ) ; } pub fn point ( & self ) -> Client { unimplemented ! ( ) ; } pub fn polygon ( & self ) -> Client { unimplemented ! ( ) ; } pub fn polygon_sub ( & self ) -> Client { unimplemented ! ( ) ; } pub fn grant ( & self ) -> Client { unimplemented ! ( ) ; } pub fn config ( & self ) -> Client { unimplemented ! ( ) ; } pub fn rebalance ( & self ) -> Client { unimplemented ! ( ) ; } pub fn reconfigure ( & self ) -> Client { unimplemented ! ( ) ; } pub fn status ( & self ) -> Client { unimplemented ! ( ) ; } pub fn wait ( & self ) -> Client { unimplemented ! ( ) ; } }